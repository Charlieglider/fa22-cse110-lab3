/* This is the style sheet */

#FFF

h1{
 color: #FFF 
}

body {
  color: blue;
}

body {
  background-color: green;
}

.wrapper {
  font-size: 1em;
}

.px {
  width: 200px;
}

.vw {
  width: 10vw;
}

.em {
  width: 10em;
}

.cm {
  width: 1cm;
}

.mm {
  width: 12mm;
}

.px {
  width: 20px;
  height: 50px;
  position: static
}

.box {
  border: 5px solid rebeccapurple;
  border-radius: 10px;
  background-color: lightgray;
  padding: 40px;
  padding-bottom: 10px;
  margin: 40px;
  margin-top: 10px;
  width: 300px;

  height: 150px;
  position: relative

.box:hover {
  color: blue; 
 }
  
  .flex-container {
  /* We first create a flex layout context */
  display: flex;
 
  flex-flow: row wrap;
  
  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
  
  padding: 0;
  margin: 0;
  list-style: none;
}

.flex-item {
  background: tomato;
  padding: 5px;
  width: 200px;
  height: 150px;
  margin-top: 10px;
  line-height: 150px;
  color: white;
  font-weight: bold;
  font-size: 3em;
  text-align: center;
}
  

display: block;
display: inline;
  
  .wrapper {
    display: grid;
    grid-gap: 10px;
    grid-template-columns: 100px 100px 100px;
    background-color: #fff;
    color: #444;
  }

  .box {
    background-color: #444;
    color: #fff;
    border-radius: 5px;
    padding: 20px;
    font-size: 150%;

  }

  .a {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
  }
  .b {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
  }
  .c {
    grid-column: 3 / 4;
    grid-row: 2 / 3;
  }
  .d {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }
  
  /* On screens that are 600px or less, set the background color to olive */
@media screen and (max-width: 600px) {
  body {
    background-color: olive;
  }
}
 
 #header {
   color: purple;
 }
 
 * {
  color: green;
 }
 
 a[title] {
  color: purple;
}
 
 
 li {
  list-style-type: disc;
}

li li {
  list-style-type: circle;
}
 
 span {
  background-color: aqua;
}

div > span {
  background-color: yellow;
}
 
 p ~ span {
  color: red;
}
 
 li:first-of-type + li {
  color: red;
}
 
 #one.two { color: red; }

